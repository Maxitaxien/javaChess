@Override
	    public void mousePressed(MouseEvent me) {
	        if (clickablePanels.contains(me.getSource())) {
	            try {
	                GamePanel currentPanel = (GamePanel) me.getSource();
	                Location currentLocation = clickablePanels.locationOf(currentPanel);
	                // Clear previous possible moves
	                clearPreviousPossibleMoves();

	                
	                Piece piece = board.get(currentLocation);
                    // Only draw markers for possible moves for current player
                    if (piece != null && players.getCurrentPlayerChar() == piece.getColour()) {
                        List<Location> possibleMoves = piece.getPossibleMoves(board);
                        for (Location loc : possibleMoves) {
                            GamePanel panel = clickablePanels.get(loc);
                            GameStateDeterminer determiner = new GameStateDeterminer(board, players.getCurrentPlayerChar());
	                        if (!determiner.kingInDangerAfterMove(
	                        			new ChessMove(currentLocation, loc, piece))) {
	                            if (panel != null) {
	                                panel.setPossibleMove(true);
	                            }
	                        }
                        }
                        previousPossibleMoves = new ArrayList<>(possibleMoves);
                    }
                
	                // Check and handle move confirmation
	                if (selectedPanels.contains(currentLocation)) {
	                    confirmMove = true;
	                } 
	                
	                setSelected(currentPanel);

	                if (confirmMove) {
	                    deselectPanels();
	                    confirmMove = false;
	                }
	                updateGui();
	            } catch (Exception e) {
	                System.err.println(e.getMessage());
	            }
	        } else {
	            System.err.println("Clicked on wrong thing: " + me.getSource());
	        }
	    }
	    
 /**
     * Inspired by the code in AlphaBetaPlayer.
     * @return
     */
    public List<ChessMove> getMovesInCheck() {
    	List<ChessMove> possibleMoves = new ArrayList<>();
		for (Location from: board.locations()) {
			if (board.get(from) != null && board.get(from).getColour() == players.getCurrentPlayerChar()) {
				Piece pieceToMove = board.get(from);
				List<Location> moveTo = pieceToMove.getPossibleMoves(board);
				for (Location to : moveTo) {
					ChessMove possibleMove = new ChessMove(from, to, pieceToMove);
					if (validMove(possibleMove)) {
						possibleMoves.add(possibleMove);
					}
		}
			}
		}
		 return possibleMoves; 
    }